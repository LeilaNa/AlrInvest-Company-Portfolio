@model AlrInvestSupply.Models.Entity.Clients

@{
    ViewBag.Title = "Yenisini əlavə et - Müştəri";
    Layout = "~/Areas/Control/Views/Shared/_LayoutControl.cshtml";
}

@section script{
    <script>
        $(function () {
            $('.validation-summary-errors').each(function () {
                $(this).addClass('alert');
                $(this).addClass('alert-danger');
            });
            $('form').each(function () {
                $(this).find('div.form-group').each(function () {
                    if ($(this).find('span.field-validation-error').length > 0) {
                        $(this).addClass('has-error');
                        $(this).find('span.field-validation-error').
                            removeClass('field-validation-error');
                    }
                });
            });
        });

        var readURL = function (input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#news-image').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        var removePhoto = function () {
            document.getElementById('fileName').value = '';
            document.getElementById('mediaUrl').value = '';
            document.getElementById('news-image').src = '';
        }
    </script>
}
@section style{
    <style>
        #news-image {
            min-width: 400px;
            min-height: 300px;
            cursor: pointer;
            width: 100%;
        }

        .image-container {
            position: relative;
            height: unset;
            border-color: transparent;
            width: 44%;
            margin: 0 auto;
        }

        img[src=""] + i.empty-icon:after {
            display: inline-block;
            font: normal normal normal 14px/1 FontAwesome;
            font-size: inherit;
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            position: absolute;
            cursor: pointer;
            content: "\f030";
            font-size: 42pt;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
        }

        img + i + a > i.clear-icon:after {
            display: inline-block;
            font: normal normal normal 14px/1 FontAwesome;
            font-size: inherit;
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            content: "\f00d";
            font-size: 12pt;
        }

        i.header-right-button {
            right: 24px;
            top: 14px;
            position: absolute;
            cursor: pointer;
        }

        img[src=""] + i + a > i.clear-icon::after {
            display: none;
        }
    </style>

}
<h2>Əlavə et - Müştəri</h2>

@using (Html.BeginForm(Html.BeginForm("Create", "Clients", method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Adı</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Şəkil</label>
            <div class="col-md-10">
                <label class="form-control image-container">
                    <img src="" id="news-image" />
                    <i class="empty-icon"></i>
                    <a href="javascript:removePhoto()"><i class="clear-icon header-right-button"></i></a>
                    @Html.EditorFor(model => model.MediaUrl,
                new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        type = "file",
                        style = "display:none",
                        accept = "image/*",
                        onchange = "readURL(this)",
                        id = "mediaUrl"
                    }
                })
                </label>
                @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Link</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Yadda saxla" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Əvvəlki səhifəyə qayıt", "Index")
</div>
